; Options for the RISC-V port of the compiler
;
; Copyright (C) 2011-2016 Free Software Foundation, Inc.
;
; This file is part of GCC.
;
; GCC is free software; you can redistribute it and/or modify it under
; the terms of the GNU General Public License as published by the Free
; Software Foundation; either version 3, or (at your option) any later
; version.
;
; GCC is distributed in the hope that it will be useful, but WITHOUT
; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
; License for more details.
;
; You should have received a copy of the GNU General Public License
; along with GCC; see the file COPYING3.  If not see
; <http://www.gnu.org/licenses/>.

HeaderInclude
config/riscv/riscv-opts.h

m32
Target RejectNegative Mask(32BIT)
Generate RV32 code.

m64
Target RejectNegative InverseMask(32BIT, 64BIT)
Generate RV64 code.

mbranch-cost=
Target RejectNegative Joined UInteger Var(riscv_branch_cost)
-mbranch-cost=N	Set the cost of branches to roughly N instructions.

mmemcpy
Target Report Mask(MEMCPY)
Don't optimize block moves.

mplt
Target Report Var(TARGET_PLT) Init(1)
When generating -fpic code, allow the use of PLTs. Ignored for fno-pic.

mfloat-abi=
Target Report RejectNegative Joined Enum(float_abi_type) Var(riscv_float_abi) Init(FLOAT_ABI_SOFT)
Specify floating-point calling convention.

Enum
Name(float_abi_type) Type(enum riscv_float_abi_type)
Known floating-point ABIs (for use with the -mfloat-abi= option):

EnumValue
Enum(float_abi_type) String(soft) Value(FLOAT_ABI_SOFT)

EnumValue
Enum(float_abi_type) String(single) Value(FLOAT_ABI_SINGLE)

EnumValue
Enum(float_abi_type) String(double) Value(FLOAT_ABI_DOUBLE)

mno-fdiv
Target Report RejectNegative Undocumented Mask(NO_FDIV)
Don't use hardware floating-point divide and square root instructions.

mfdiv
Target Report RejectNegative InverseMask(NO_FDIV, FDIV)
Use hardware floating-point divide and square root instructions.

march=
Target Report RejectNegative Joined
-march=	Generate code for given RISC-V ISA (e.g. RV64IM).

mtune=
Target RejectNegative Joined Var(riscv_tune_string)
-mtune=PROCESSOR	Optimize the output for PROCESSOR.

msmall-data-limit=
Target Joined Separate UInteger Var(g_switch_value) Init(8)
-msmall-data-limit=N	Put global and static data smaller than <number> bytes into a special section (on some targets).

matomic
Target Report Mask(ATOMIC)
Use hardware atomic memory instructions.

mmuldiv
Target Report
Use hardware instructions for integer multiplication and division.

mmul
Target Report Mask(MUL)
Use hardware instructions for integer multiplication.

mdiv
Target Report Mask(DIV)
Use hardware instructions for integer division.

mrvc
Target Report Mask(RVC)
Use compressed instruction encoding.

msave-restore
Target Report Mask(SAVE_RESTORE)
Use smaller but slower prologue and epilogue code.

mcmodel=
Target RejectNegative Joined Var(riscv_cmodel_string)
Use given RISC-V code model (medlow or medany).

mexplicit-relocs
Target Report Mask(EXPLICIT_RELOCS)
Use %reloc() operators, rather than assembly macros, to load addresses.

mno-float
Target Report RejectNegative
Disable hardware floating-point.  Implies -mfloat-abi=soft.

msingle-float
Target Report RejectNegative Mask(HARD_FLOAT)
Enable only single-precision floating-point.

mdouble-float
Target Report RejectNegative Mask(DOUBLE_FLOAT)
Enable single- and double-precision floating-point.
